[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\rakhub\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\rakhub\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (AdoptOpenJDK Java 1.8.0_282)
[debug]       Load.loadUnit: plugins took 109.4931ms
[debug]       Load.loadUnit: defsScala took 0.3027ms
[debug] [Loading] Scanning directory C:\Users\rakhub\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\rakhub\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.0146 ms
[debug]           Load.resolveProject(global-plugins) took 52.7937ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\rakhub\.sbt\1.0\plugins, plugins: List(<none>))) took 103.5898ms
[debug] [Loading] Done in C:\Users\rakhub\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 124.9103ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3895ms
[debug]     Load.loadUnit(file:/C:/Users/rakhub/.sbt/1.0/plugins/, ...) took 243.4858ms
[debug]   Load.apply: load took 435.3484ms
[debug]   Load.apply: resolveProjects took 8.5314ms
[debug]   Load.apply: finalTransforms took 79.7018ms
[debug]   Load.apply: config.delegates took 15.0571ms
[debug]   Load.apply: Def.make(settings)... took 1974.2358ms
[debug]   Load.apply: structureIndex took 126.0349ms
[debug]   Load.apply: mkStreams took 2.4762ms
[info] loading global plugins from C:\Users\rakhub\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5414.8912ms
[debug]           Load.loadUnit: plugins took 46.097ms
[debug]           Load.loadUnit: defsScala took 0.0074ms
[debug] [Loading] Scanning directory C:\Users\rakhub\Downloads\scala-bootcamp-master\homework2\project
[debug]             Load.loadUnit: mkEval took 13.5595ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\rakhub\Downloads\scala-bootcamp-master\homework2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.3098 ms
[info] loading settings for project homework2-build from idea.sbt ...
[debug]               Load.resolveProject(homework2-build) took 4.0607ms
[debug]             Load.loadTransitive: finalizeProject(Project(id homework2-build, base: C:\Users\rakhub\Downloads\scala-bootcamp-master\homework2\project, plugins: List(<none>))) took 7.2175ms
[debug] [Loading] Done in C:\Users\rakhub\Downloads\scala-bootcamp-master\homework2\project, returning: (homework2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3144.2813ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.0953ms
[debug]         Load.loadUnit(file:/C:/Users/rakhub/Downloads/scala-bootcamp-master/homework2/project/, ...) took 3199.0401ms
[debug]       Load.apply: load took 3201.1051ms
[debug]       Load.apply: resolveProjects took 0.1103ms
[debug]       Load.apply: finalTransforms took 11.7409ms
[debug]       Load.apply: config.delegates took 0.5127ms
[debug]       Load.apply: Def.make(settings)... took 124.3553ms
[debug]       Load.apply: structureIndex took 48.5107ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from C:\Users\rakhub\Downloads\scala-bootcamp-master\homework2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5321.717ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\rakhub\Downloads\scala-bootcamp-master\homework2
[debug]       Load.loadUnit: mkEval took 0.3568ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\rakhub\Downloads\scala-bootcamp-master\homework2, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.7226 ms
[info] loading settings for project homework2 from build.sbt ...
[debug]         Load.resolveProject(homework2) took 92.5245ms
[debug]       Load.loadTransitive: finalizeProject(Project(id homework2, base: C:\Users\rakhub\Downloads\scala-bootcamp-master\homework2, plugins: List(<none>))) took 96.9733ms
[debug] [Loading] Done in C:\Users\rakhub\Downloads\scala-bootcamp-master\homework2, returning: (homework2)
[debug]     Load.loadUnit: loadedProjectsRaw took 1450.4313ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.3302ms
[debug]   Load.loadUnit(file:/C:/Users/rakhub/Downloads/scala-bootcamp-master/homework2/, ...) took 6792.6077ms
[debug] Load.apply: load took 6807.2156ms
[debug] Load.apply: resolveProjects took 0.1979ms
[debug] Load.apply: finalTransforms took 41.4609ms
[debug] Load.apply: config.delegates took 0.4007ms
[debug] Load.apply: Def.make(settings)... took 120.4446ms
[debug] Load.apply: structureIndex took 26.4702ms
[debug] Load.apply: mkStreams took 0.0027ms
[info] set current project to homework2 (in build file:/C:/Users/rakhub/Downloads/scala-bootcamp-master/homework2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59508 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59508, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to homework2 (in build file:/C:/Users/rakhub/Downloads/scala-bootcamp-master/homework2/)
[debug] > Exec(idea-shell, None, None)
